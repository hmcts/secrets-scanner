name: Secret Scanner
description: Scans the code base to detect for the presence of secrets.
inputs:
  github_token:
    required: true
    description: GitHub token for authentication, required for accessing the repository and posting comments.
  gitleaks_license:
    required: true
    description: Gitleaks license key to use the licensed version.
  gitleaks_regex_internal_url:
    required: false
    default: ""
    description: Regex to identify internal urls

runs:
  using: "composite"
  steps:
    - name: Prepare Gitleaks config
      if: ${{ inputs.gitleaks_regex_internal_url != '' }}
      shell: bash
      run: |
        echo "Executing step: Prepare Gitleaks config"
        set -euo pipefail
        export GITLEAKS_REGEX_INTERNAL_URL='${{ inputs.gitleaks_regex_internal_url }}'
        CUSTOM_CONFIG_FILE="$RUNNER_TEMP/gitleaks-custom-rules.toml"
        envsubst < "${{ github.action_path }}/gitleaks-custom-rules-template.toml" > "$CUSTOM_CONFIG_FILE"
        # Set GITLEAKS_CONFIG env variable and make it available to subsequent steps
        echo "GITLEAKS_CONFIG=$CUSTOM_CONFIG_FILE" >> "$GITHUB_ENV"
        echo "------------ Scan will run with builtin + custom rules ------------"

    - name: Gitleaks scanning
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        GITLEAKS_LICENSE: ${{ inputs.gitleaks_license }}
        GITLEAKS_ENABLE_COMMENTS: "false" # suppress PR comments
        GITLEAKS_ENABLE_SUMMARY:  "false" # suppress Job Summary

    - name: Prepare TruffleHog custom detectors
      shell: bash
      run: |
        echo "Preparing custom detectors config"
        set -euo pipefail
        echo "pwd dir:"
        pwd
        echo "github.action_path dir contents:"
        ls -al "${{ github.action_path }}"
        echo "github.action_path=${{ github.action_path }}"
        echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
        echo "RUNNER_TEMP=$RUNNER_TEMP"
        echo "Repo root contents:"
        ls -al "$GITHUB_WORKSPACE"
        CONFIG_PATH="$GITHUB_WORKSPACE/custom_detectors.yml"
        echo "Asserting config exists at: $CONFIG_PATH"
        if [ ! -f "$CONFIG_PATH" ]; then
          echo "::error file=custom_detectors.yml::Custom detectors file not found at $CONFIG_PATH"
          exit 1
        fi
        echo "Config file head (first 50 lines):"
        head -n 50 "$CONFIG_PATH" || true
        echo "TRUFFLEHOG_CONFIG=$CONFIG_PATH" >> "$GITHUB_ENV"

    - name: Assert TRUFFLEHOG_CONFIG exists
      shell: bash
      run: |
        echo "TRUFFLEHOG_CONFIG=${{ env.TRUFFLEHOG_CONFIG }}"
        if [ -z "${{ env.TRUFFLEHOG_CONFIG }}" ]; then
          echo "::error::TRUFFLEHOG_CONFIG env is empty"
          exit 1
        fi
        if [ ! -f "${{ env.TRUFFLEHOG_CONFIG }}" ]; then
          echo "::error::Config does not exist at '${{ env.TRUFFLEHOG_CONFIG }}'"
          echo "Parent dir listing:"
          ls -al "$(dirname "${{ env.TRUFFLEHOG_CONFIG }}")" || true
          exit 1
        fi
        
    - name: TruffleHog 🐽 scanning
      uses: trufflesecurity/trufflehog@main
      with:
        extra_args: >
          --results=verified,unknown
          --config "${{ env.TRUFFLEHOG_CONFIG }}"
